@model CampgroundDetailModel
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Plugin.Widgets.Campgrounds.Mapping
@using System.Device.Location
@using Nop.Web.Extensions;
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@{
    Layout = "~/Plugins/Campgrounds/Views/Shared/_ColumnsOneAngular.cshtml";
    Html.AddScriptParts(ResourceLocation.Footer, "~/plugins/campgrounds/content/js/camptale.min.js");
    Html.AddScriptParts(ResourceLocation.Footer, "//maps.googleapis.com/maps/api/js?key=AIzaSyBatV_B_a-477kd8IN_wmvDEbJdIF9LQ8c&libraries=places&callback=initMap", isAsync: true, excludeFromBundle: true);


    //title
    Html.AddTitleParts("Camping near my location");
    //meta
    Html.AddMetaDescriptionParts(!string.IsNullOrEmpty(Model.MetaDescription) ? Model.MetaDescription : Model.Description);
    Html.AddMetaKeywordParts(!string.IsNullOrEmpty(Model.MetaKeywords) ? Model.MetaKeywords : Model.Name.ToLower() + " campgrounds, camping in " + Model.Name.ToLower() + ", tent camping around " + Model.Name.ToLower() + ", rv camping, car camping, tent campsites, boondocking");
    //page class
    Html.AppendPageCssClassParts("html-campground-page");

    if (seoSettings.CanonicalUrlsEnabled)
    {
        var campgroundDetailUrl = Url.RouteUrl("CampgroundDetail", new { SeName = Model.SeName, campgroundSeName = Model.CampgroundSeName }, this.Url.ActionContext.HttpContext.Request.Scheme);
        Html.AddCanonicalUrlParts(campgroundDetailUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
    var campgroundCoordinates = new List<GeoCoordinate>();
    var mapPoints = new List<MapPoints>();
    var i = 1;
}
<div class="row features_items">
    <!--features_items-->
    <div class="col l8 m9 s12 pull-left">
        <h1 class="title text-center" itemprop="name">@Model.Name Campground</h1>
        <h2 class="sub-title text-center" itemprop="address">We have your current location as Lat: 39.4937645, Long: -104.88633929999999. These are the campgrounds in a 25 mile radius.</h2>
        <p class="campground-detail" itemprop="description">@Html.Raw(Model.FullDescription)</p>
        @if (Model.AvailableCampsites > 0)
        {
            <p>This campground boasts to have <b>@Html.Raw(Model.AvailableCampsites) campsites</b>.</p>
        }
        <h6 id="location-@Model.Id">My Location (green tent)</h6>
        <div id="map" class="small_map"></div>
        <hr />
        <script type="text/javascript">
            amzn_assoc_placement = "adunit0";
            amzn_assoc_search_bar = "true";
            amzn_assoc_tracking_id = "ct-nearby-20";
            amzn_assoc_ad_mode = "manual";
            amzn_assoc_ad_type = "smart";
            amzn_assoc_marketplace = "amazon";
            amzn_assoc_region = "US";
            amzn_assoc_title = "Grab some gear before you go!";
            amzn_assoc_linkid = "c7d081536873996a55fe42f770c0225a";
            amzn_assoc_asins = "B06Y5WH94J,B076PR4TBZ,B006EHAJSG,B01N7YRN4E,B01A1A5GAW,B073C3BDYS,B00HWL9BQ4,B06ZYS41FK";
        </script>
        <script src="//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US"></script>
    </div>
    <div class="col l4 m3 s12">
        <h5>@T("Campgrounds.Detail.Nearby")</h5>
        @foreach (var item in Model.NearbyCampgrounds)
        {
            campgroundCoordinates.Add(new GeoCoordinate((double)item.CampgroundAddress.Latitude, (double)item.CampgroundAddress.Longitude));
            mapPoints.Add(new MapPoints(item.Id.ToString(), item.Name, item.Description, new GeoCoordinate((double)item.CampgroundAddress.Latitude, (double)item.CampgroundAddress.Longitude)));
            @Html.Partial("~/Plugins/Campgrounds/Views/Shared/_CampgroundTile.cshtml", item)
            @if (i == 4)
            {
                <div class="row campground-summary-card">
                    <div class="row">
                        <script type="text/javascript">
                            amzn_assoc_placement = "adunit0";
                            amzn_assoc_search_bar = "true";
                            amzn_assoc_tracking_id = "ct-overview-20";
                            amzn_assoc_search_bar_position = "top";
                            amzn_assoc_ad_mode = "search";
                            amzn_assoc_ad_type = "smart";
                            amzn_assoc_marketplace = "amazon";
                            amzn_assoc_region = "US";
                            amzn_assoc_title = "Shop Camping Products";
                            amzn_assoc_default_search_phrase = "Blackstone camp stove";
                            amzn_assoc_default_category = "All";
                            amzn_assoc_linkid = "3478ddde7ba2024bccf65fb71d22a424";
                        </script>
                        <script src="//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US"></script>
                    </div>
                </div>
            }
            @if (i == 8)
            {
                <div class="row campground-summary-card">
                    <div class="row">
                        <script type="text/javascript">
                            amzn_assoc_placement = "adunit0";
                            amzn_assoc_search_bar = "true";
                            amzn_assoc_tracking_id = "ct-overview-20";
                            amzn_assoc_search_bar_position = "top";
                            amzn_assoc_ad_mode = "search";
                            amzn_assoc_ad_type = "smart";
                            amzn_assoc_marketplace = "amazon";
                            amzn_assoc_region = "US";
                            amzn_assoc_title = "Shop Related Products";
                            amzn_assoc_default_search_phrase = "Hiking Boots";
                            amzn_assoc_default_category = "All";
                            amzn_assoc_linkid = "2242887af27428ff24813e15d78565d3";
                        </script>
                        <script src="//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US"></script>
                    </div>
                </div>
            }
            i++;
        }
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-3544167684134058"
             data-ad-slot="9388058609"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>
</div>
<script>
    var coordinates

    function success(position) {
        coordinates = position.coords;
        @foreach(var mapPoint in mapPoints) {
            if (mapPoint.CampgroundLocation.Latitude != 0 && mapPoint.CampgroundLocation.Longitude != 0) {
            <text>
            this.locations.push(['@mapPoint.Name', '@mapPoint.Description', @mapPoint.CampgroundLocation.Latitude, @mapPoint.CampgroundLocation.Longitude, @mapPoint.Id]);</text>
            }
        }
        this.mapZoom = 10;
        this.mapType = 'Satellite';
        this.campgroundLatLng = { lat: coordinates.latitude, lng: coordinates.longitude };
        initDetailMap('', '');
    }

    function error(err) {
        console.warn(`ERROR(${err.code}): ${err.message}`);
    }

    function initMap() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(success, error);
        }
    }
</script>