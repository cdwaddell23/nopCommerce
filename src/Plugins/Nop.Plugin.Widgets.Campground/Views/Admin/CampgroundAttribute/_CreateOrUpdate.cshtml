@model CampgroundAttributeTypeModel
@inject Nop.Services.Events.IEventPublisher eventPublisher
@using Nop.Web.Framework.Events
<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <nop-tabs id="campground-attribute-edit">
            <nop-tab asp-name="tab-info" asp-title="@T("Admin.Catalog.Attributes.CampgroundAttributes.Info")" asp-default="true">@await Html.PartialAsync("~/Plugins/Campgrounds/Views/Admin/CampgroundAttribute/_CreateOrUpdate.Info.cshtml", Model)</nop-tab>
            @if (Model.Id > 0)
            {
                <nop-tab asp-title="@T("Admin.Catalog.Attributes.CampgroundAttributes.UsedByCampgrounds")" asp-name="tab-used-by-campgrounds">@await Html.PartialAsync("~/Plugins/Campgrounds/Views/Admin/CampgroundAttribute/_CreateOrUpdate.UsedByCampgrounds.cshtml", Model)</nop-tab>
            }
            <nop-tab asp-name="tab-predefined-values" asp-title="@T("Admin.Catalog.Attributes.CampgroundAttributes.PredefinedValues")">@await Html.PartialAsync("~/Plugins/Campgrounds/Views/Admin/CampgroundAttribute/_CreateOrUpdate.PredefinedValues.cshtml", Model)</nop-tab>
        </nop-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "campground-attribute-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}