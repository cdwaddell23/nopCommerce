@model CampgroundReviewAdminListModel
@inject AdminAreaSettings adminAreaSettings

@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.CampgroundReviews").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Campground reviews");
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.CampgroundReviews")
    </h1>
    <div class="pull-right">
        @if (!Model.IsLoggedInAsHost)
        {
            //these buttons are not visible to hosts
            <button type="button" id="approve-selected" class="btn bg-green">
                <i class="fa fa-check-square-o"></i>
                @T("Admin.CampgroundReviews.ApproveSelected")
            </button>
            <button type="button" id="disapprove-selected" class="btn bg-navy">
                <i class="fa fa-minus-square-o"></i>
                @T("Admin.CampgroundReviews.DisapproveSelected")
            </button>
            <button type="button" id="delete-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.CampgroundReviews.DeleteSelected")
            </button>
        }
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_campground_review_list_buttons" })
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="CreatedOnFrom" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="CreatedOnFrom" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="CreatedOnTo" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="CreatedOnTo" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="SearchText" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="SearchText" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="SearchApprovedId" />
                                </div>
                                <div class="col-md-8">
                                    <nop-select asp-for="SearchApprovedId" asp-items="Model.AvailableApprovedOptions" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="SearchCampgroundId" />
                                </div>
                                <div class="col-md-8">
                                    <input type="text" class="form-control" id="search-campground-name" autocomplete="off" />
                                    <script type="text/javascript">
                                    $(document).ready(function() {
                                        $('#search-campground-name').autocomplete({
                                            delay: 500,
                                            minLength: 3,
                                            source: '@(Url.Action("CampgroundSearchAutoComplete"))',
                                            select: function(event, ui) {
                                                $('#@Html.IdFor(model => model.SearchCampgroundId)').val(ui.item.campgroundid);
                                                $('#search-campground-friendly-name').text(ui.item.label);
                                                $('#search-campground-clear').show();
                                                return false;
                                            }
                                        });
                                    });
                                    </script>

                                    <span id="search-campground-friendly-name"></span>
                                    <button type="button" id="search-campground-clear" class="btn bg-gray" style="display: none; margin-top: 5px;">@T("Admin.Common.Clear")</button>
                                    <input asp-for="SearchCampgroundId" autocomplete = "off" style = "display:none;" />

                                    <script type="text/javascript">
                                    //remove button
                                    $('#search-campground-clear').click(function() {
                                        $('#@Html.IdFor(model => model.SearchCampgroundId)').val('0');
                                        $('#search-campground-friendly-name').text('');
                                        $('#search-campground-clear').hide();
                                        return false;
                                    });
                                    </script>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-campgroundreviews" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="campgroundreviews-grid"></div>

                    <script type="text/javascript">
                        $(document).ready(function() {
                            $("#campgroundreviews-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("List", "CampgroundReview"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @await Html.PartialAsync("_GridPagerMessages")
                                },
                                scrollable: false,
                                dataBound: onDataBound,
                                columns: [
                                    {
                                        field: "Id",
                                        hidden: @(Model.IsLoggedInAsHost ? "true" : "false"),
                                        headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                        width: 50
                                    }, {
                                        field: "CampgroundName",
                                        title: "@T("Admin.CampgroundReviews.Fields.Campground")",
                                        width: 200,
                                        template: '<a href="@Url.Content("~/Admin/Campground/Edit/")#=CampgroundId#">#:CampgroundName#</a>'
                                    }, {
                                        field: "CustomerId",
                                        title: "@T("Admin.CampgroundReviews.Fields.Customer")",
                                        width: 200,
                                        template: '<a href="@Url.Content("~/Admin/Customer/Edit/")#=CustomerId#">#:CustomerInfo#</a>'
                                    }, {
                                        field: "Title",
                                        title: "@T("Admin.CampgroundReviews.Fields.Title")",
                                        width: 200
                                    }, {
                                        field: "ReviewText",
                                        title: "@T("Admin.CampgroundReviews.Fields.ReviewText")",
                                        width: 400,
                                        encoded: false
                                    },  {
                                        field: "ReplyText",
                                        title: "@T("Admin.CampgroundReviews.Fields.ReplyText")",
                                        width: 400,
                                        encoded: false
                                    }, {
                                        field: "Rating",
                                        title: "@T("Admin.CampgroundReviews.Fields.Rating")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" }
                                    }, {
                                        field: "IsApproved",
                                        title: "@T("Admin.CampgroundReviews.Fields.IsApproved")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '# if(IsApproved) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                    }, {
                                        field: "CreatedOn",
                                        title: "@T("Admin.CampgroundReviews.Fields.CreatedOn")",
                                        width: 200,
                                        type: "date",
                                        format: "{0:G}"
                                    }, {
                                        field: "Id",
                                        title: "@T("Admin.Common.Edit")",
                                        width: 50,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '<a class="btn btn-default" href="Edit/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                    }
                                ]
                            });
                        });
                    </script>

                    <script type="text/javascript">
                        var selectedIds = [];

                        $(document).ready(function() {
                            //search button
                            $('#search-campgroundreviews').click(function() {
                                //search
                                var grid = $('#campgroundreviews-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                //clear selected checkboxes
                                $('.checkboxGroups').attr('checked', false).change();
                                selectedIds = [];
                                return false;
                            });

                            //"approve selected" button
                            $('#approve-selected').click(function(e) {
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ApproveSelected", "CampgroundReview"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#campgroundreviews-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });

                            //"disapprove selected" button
                            $('#disapprove-selected').click(function(e) {
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("DisapproveSelected", "CampgroundReview"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#campgroundreviews-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });

                            //"delete selected" button
                            $('#delete-selected').click(function(e) {
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("DeleteSelected", "CampgroundReview"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#campgroundreviews-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });


                            $('#mastercheckbox').click(function() {
                                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                            });

                            //wire up checkboxes.
                            $('#campgroundreviews-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function(e) {
                                var $check = $(this);
                                if ($check.is(":checked") == true) {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked == -1) {
                                        //add id to selectedIds.
                                        selectedIds.push($check.val());
                                    }
                                } else {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked > -1) {
                                        //remove id from selectedIds.
                                        selectedIds = $.grep(selectedIds, function(item, index) {
                                            return item != $check.val();
                                        });
                                    }
                                }
                                updateMasterCheckbox();
                            });
                        });

                        function additionalData() {
                            var data = {
                                CreatedOnFrom: $('#@Html.IdFor(model => model.CreatedOnFrom)').val(),
                                CreatedOnTo: $('#@Html.IdFor(model => model.CreatedOnTo)').val(),
                                SearchText: $('#@Html.IdFor(model => model.SearchText)').val(),
                                SearchCampgroundId: $('#@Html.IdFor(model => model.SearchCampgroundId)').val(),
                                SearchApprovedId: $('#SearchApprovedId').val()
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }

                        function onDataBound(e) {

                            $('#campgroundreviews-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function() {
                                var currentId = $(this).val();
                                var checked = jQuery.inArray(currentId, selectedIds);
                                //set checked based on if current checkbox's value is in selectedIds.
                                $(this).attr('checked', checked > -1);
                            });

                            updateMasterCheckbox();
                        }

                        function updateMasterCheckbox() {
                            var numChkBoxes = $('#campgroundreviews-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
                            var numChkBoxesChecked = $('#campgroundreviews-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
                            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                        }

                    </script>
                </div>
            </div>
        </div>
    </div>
</div>