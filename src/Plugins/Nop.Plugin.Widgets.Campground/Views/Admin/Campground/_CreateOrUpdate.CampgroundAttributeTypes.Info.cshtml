@model CampgroundModel

@await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_campground_details_campground_attributes_info_top", additionalData = Model.Id })
<div class="panel panel-default">
    <div class="panel-body">
        <div id="campgroundattributemappings-grid"></div>
        <script type="text/javascript">
            $(document).ready(function() {
                $("#campgroundattributemappings-grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("CampgroundAttributeMappingList", "Campground", new { campgroundId = Model.Id }))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors"
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    pageable: {
                        refresh: true,
                        numeric: false,
                        previousNext: false,
                        info: false,
                        @await Html.PartialAsync("_GridPagerMessages")
                    },
                    editable: {
                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                        mode: "inline"
                    },
                    scrollable: false,
                    columns: [
                        {
                            field: "CampgroundAttributeType",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.Fields.Attribute")",
                            width: 200
                        }, {
                            field: "TextPrompt",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.Fields.TextPrompt")",
                            width: 150
                        }, {
                            field: "IsRequired",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.Fields.IsRequired")",
                            width: 100,
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '# if(IsRequired) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                        },
                        {
                            field: "AttributeControlType",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.Fields.AttributeControlType")",
                            width: 250
                        },
                        {
                            field: "DisplayOrder",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.Fields.DisplayOrder")",
                            width: 150
                        },
                        {
                            field: "ValidationRulesString",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.ValidationRules")",
                            width: 150,
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            encoded: false
                        },
                        {
                            field: "ConditionString",
                            title: "@T("Admin.Campgrounds.CampgroundAttributes.Attributes.Condition")",
                            width: 150,
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            encoded: false
                        },
                        {
                            field: "Id",
                            title: "@T("Admin.Common.Edit")",
                            width: 100,
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '<a class="btn btn-default" href="@Url.Content("~/Admin/Campground/CampgroundAttributeMappingEdit/")#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                        }
                    ]
                });
            });

        </script>
    </div>

    <div class="panel-footer">
        <a asp-action="CampgroundAttributeMappingCreate" asp-route-campgroundId="@Model.Id" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Campgrounds.CampgroundAttributes.Attributes.AddNew")
        </a>
    </div>
</div>
@await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_campground_details_campground_attributes_info_bottom", additionalData = Model.Id })